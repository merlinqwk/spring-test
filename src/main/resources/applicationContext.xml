<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbcConfig.properties</value>
                <value>classpath:redis-properties.properties</value>
            </list>
        </property>
    </bean>

    <import resource="spring-redis.xml"/>

    <bean id="businessDb" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${businessDb-url}"/>
        <property name="username" value="${businessDb-userName}"/>
        <property name="password" value="${businessDb-password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="10" />
        <!-- 最大连接池数量 -->
        <property name="maxActive" value="100" />
        <!-- 最小连接词数量 -->
        <property name="minIdle" value="10" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />

        <!-- <property name="poolPreparedStatements" value="true" />
         <property name="maxPoolPreparedStatementPerConnectionSize" value="100" /> -->

        <property name="validationQuery" value="${validationQuery}" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />

        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />

        <!-- 监控数据库 -->
        <!-- <property name="filters" value="mergeStat" /> -->
        <property name="filters" value="stat" />
    </bean>

    <bean id="businessSqlFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="businessDb"/>
        <property name="mapperLocations" value="classpath:mapper/BusinessMapper.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="businessSqlFactory"/>
        <property name="mapperInterface" value="com.merlin.practice.dao.HelloDao"/>
    </bean>

    <bean id="businessTransaction" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="businessDb"/>
    </bean>

    <context:component-scan base-package="com.merlin.practice.service"/>
    <context:component-scan base-package="com.merlin.practice.dao"/>
    <!--<context:component-scan base-package="com.merlin.practice">-->
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
        <!--<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>-->
    <!--</context:component-scan>-->




</beans>